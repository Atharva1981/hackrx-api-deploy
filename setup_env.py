#!/usr/bin/env python3
"""
Environment Setup Script for HackRx API
This script helps you create a .env file with the required environment variables.
"""

import os
import getpass

def create_env_file():
    """Create a .env file with user input"""
    
    print("üîß HackRx API Environment Setup")
    print("=" * 40)
    
    # Check if .env already exists
    if os.path.exists('.env'):
        print("‚ö†Ô∏è  .env file already exists!")
        overwrite = input("Do you want to overwrite it? (y/N): ").lower()
        if overwrite != 'y':
            print("‚ùå Setup cancelled.")
            return
    
    # Get API keys from user
    print("\nüìù Please enter your API keys:")
    
    # HackRx API Key
    hackrx_key = getpass.getpass("HACKRX_API_KEY (press Enter to use default): ")
    if not hackrx_key:
        hackrx_key = "8b796ad826037b97ba28ae4cd36c4605bd9ed1464673ad5b0a3290a9867a9d21"
    
    # OpenRouter API Key
    openrouter_key = getpass.getpass("OPENROUTER_API_KEY (press Enter to use default): ")
    if not openrouter_key:
        openrouter_key = "your-openrouter-api-key-here"
    
    # OpenAI API Key
    openai_key = getpass.getpass("OPENAI_API_KEY (press Enter to use default): ")
    if not openai_key:
        openai_key = "your-openai-api-key-here"
    
    # Create .env content
    env_content = f"""# HackRx API Environment Variables
# Generated by setup_env.py

# API Key for Bearer token authentication
HACKRX_API_KEY={hackrx_key}

# OpenRouter API Key for Mistral AI integration
OPENROUTER_API_KEY={openrouter_key}

# OpenAI API Key for GPT models (fallback option)
OPENAI_API_KEY={openai_key}

# Optional: Additional configuration
# DEBUG_MODE=true
# LOG_LEVEL=INFO
# MAX_FILE_SIZE=10485760  # 10MB in bytes
"""
    
    # Write to .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        print("\n‚úÖ .env file created successfully!")
        print("üîí The file is already in .gitignore to keep your keys secure.")
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")
        return
    
    # Verify the file was created
    if os.path.exists('.env'):
        print("\nüìã Environment variables set:")
        print(f"   HACKRX_API_KEY: {'*' * len(hackrx_key)}")
        print(f"   OPENROUTER_API_KEY: {'*' * len(openrouter_key)}")
        print(f"   OPENAI_API_KEY: {'*' * len(openai_key)}")
        print("\nüöÄ You can now run your HackRx API!")

if __name__ == "__main__":
    create_env_file()
